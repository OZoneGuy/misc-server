name: Deploy to server
on:
  push:
    paths-ignore:
      - '.gitignore'
    branches:
      - 'main'
jobs:
  build_and_deploy:
    runs-on: ['self-hosted']
    environment: api-server
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Rust environment
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Add secrets.json
      env:
        SECRETS_JSON: ${{ secrets.SERVER_SECRETS }}
      run: echo "$SECRETS_JSON" > secrets.json
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo
    - name: Build Rust application
      env:
        GH_SHA_REF: ${{ github.sha }}
      run: cargo build --release
    - name: Setup SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    - name: Stop the server
      run: ssh -i ~/.ssh/id_rsa root@omaralkersh.com 'systemctl stop api_server.service'
    - name: Copy binary to remote server
      run: |
        echo "copying new binary..."
        scp -i ~/.ssh/id_rsa target/release/misc-server root@omaralkersh.com:/root/bin/api-server
    - name: Start server
      if: ${{ always() }}
      run: |
        echo "starting server..."
        ssh -i ~/.ssh/id_rsa root@omaralkersh.com 'systemctl start api_server'
        echo "started server."
    - name: Check server
      run: |
        ssh -i ~/.ssh/id_rsa root@omaralkersh.com 'systemctl status api_server'

  run_ldap_docker:
    runs-on: ['self-hosted']
    if: ${{ github.event_name == 'push' && contains(github.event.head_commit.modified, './ldap.yml') }}
    environment: api-server
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    - name: Copy docker-compose file
      run: scp -i ~/.ssh/id_rsa ldap.yml root@omaralkersh.com:~/docker-compose/ldap.yml
    - name: Start docker-compose
      run: ssh -i ~/.ssh/id_rsa root@omaralkersh.com 'cd docker-compose && docker-compose -f ldap.yml up -d'

  check:
    needs: [run_ldap_docker, build_and_deploy]
    runs-on: ['self-hosted']
    environment: api-server
    if: |
      always()
      && needs.build_and_deploy.result == 'success'
      && (needs.run_ldap_docker.result == 'success'
          || needs.run_ldap_docker.result == 'skipped')
    steps:
    - name: Setup SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    - name: Check the service status
      run: ssh -i ~/.ssh/id_rsa root@omaralkersh.com 'systemctl status api_server.service'
    - name: Check the server health
      run: curl --insecure https://omaralkersh.com/api/health
    - name: Check the version
      run: |
        version=$(curl --insecure https://omaralkersh.com/api/version)
        deployed_commit=$(echo $version | jq -r '.commit')
        current_commit=${{ github.sha }}
        if [ "$deployed_commit" != "$current_commit" ]; then
          echo "Deployed commit: $deployed_commit"
          echo "Current commit: $current_commit"
          exit 1
        fi
